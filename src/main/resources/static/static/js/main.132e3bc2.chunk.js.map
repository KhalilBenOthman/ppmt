{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","reducers/errorReducer.js","actions/projectActions.js","components/Project/Projectitem.js","components/Dashboard.js","securituUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/backlogReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectsTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagment/Register.js","components/UserManagment/Login.js","securituUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","initialState","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","Projectitem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","state","get","res","setJWTToken","token","defaults","headers","common","login","loginRequest","localStorage","setItem","decoded","jwt_decode","logout","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullname","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","inititialState","project_tasks","project_task","initialStates","initialstate","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectsTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithme","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","propTypes","PropTypes","func","isRequired","object","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.132e3bc2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <Link to=\"/addProject\" className=\"btn btn-primary btn-lg\">\r\n      Create a Project\r\n    </Link>\r\n  );\r\n};\r\nexport default CreateProjectButton;\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for backlog\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport errorReducer from \"../reducers/errorReducer\";\r\nimport { GET_ERRORS, GET_PROJECT, GET_PROJECTS, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = (id) => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure\")) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass Projectitem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectitem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(Projectitem);\r\n","import React, { Component } from \"react\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport Projectitem from \"./Project/Projectitem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map((project) => (\r\n                <Projectitem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport setJWTToken from \"../securituUtils/setJWTToken\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (loginRequest) => async (dispatch) => {\r\n  try {\r\n    //post login res\r\n    const res = await axios.post(\"/api/users/login\", loginRequest);\r\n    //extract token\r\n    const { token } = res.data;\r\n    //store token in localstorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    //set token in header\r\n    setJWTToken(token);\r\n    //decode token\r\n    const decoded = jwt_decode(token);\r\n    //dispactch\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ms-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullname}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      //  <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n      <ul className=\"navbar-nav ms-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/register\">\r\n            Sign Up\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/login\">\r\n            Login\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      // </div>\r\n    );\r\n    let headerLinks;\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName,\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback font-weight-bold text-justify\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectIdentifier,\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback font-weight-bold text-justify\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.description,\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    ></textarea>\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback font-weight-bold text-justify\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst inititialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = inititialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task) => project_task.projectSequence !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECT, GET_PROJECTS, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialStates = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\nexport default function (state = initialStates, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          (project) => project.projectIdentifier !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialstate = {\r\n  user: {},\r\n  validToken: false,\r\n};\r\nconst booleanActionPayload = (payload) => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function (state = initialstate, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    });\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback font-weight-bold text-justify\">\r\n                      {errors.projectName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    value={this.state.projectIdentifier}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback font-weight-bold text-justify\">\r\n                      {errors.description}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectsTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectsTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectsTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"./types\";\r\n\r\nexport const addProjectTask =\r\n  (backlog_id, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\nexport const getProjectTask =\r\n  (backlog_id, pt_id, history) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n      dispatch({\r\n        type: GET_PROJECT_TASK,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  };\r\n\r\nexport const updateProjectTask =\r\n  (backlog_id, pt_id, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project Task ${pt_id},this action cannot br undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectsTask from \"./ProjectTasks/ProjectsTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n    const tasks = project_tasks_prop.map((project_task) => (\r\n      <ProjectsTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (\r\n        tasks[i].props.project_task.status === \"TO_DO\" ||\r\n        tasks[i].props.project_task.status === \"To_Do\"\r\n      ) {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n      if (\r\n        tasks[i].props.project_task.status === \"IN_PROGRESS\" ||\r\n        tasks[i].props.project_task.status === \"In_Progress\"\r\n      ) {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n      if (\r\n        tasks[i].props.project_task.status === \"DONE\" ||\r\n        tasks[i].props.project_task.status === \"Done\"\r\n      ) {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // tasks here\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n            {\r\n              //<!-- SAMPLE PROJECT TASK STARTS HERE -->\r\n              //<!-- SAMPLE PROJECT TASK ENDS HERE -->\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructer to hundel errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithme = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        //project identifier\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this Board;\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n    BoardContent = boardAlgorithme(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  //on Change\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n  //on Submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask,\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    } = nextProps.project_task;\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At,\r\n    };\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n    //console.log(UpdateProjectTask);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} + Project Task ID:{\" \"}\r\n                {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Managment Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/Register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/Login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      fullname: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullname: this.state.fullname,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullname,\r\n                    })}\r\n                    placeholder=\"full Name\"\r\n                    name=\"fullname\"\r\n                    value={this.state.fullname}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullname && (\r\n                    <div className=\"invalid-feedback\">{errors.fullname}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address (Username\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n    this.props.login(loginRequest);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nlogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Component } from \"react\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagment/Register\";\nimport Login from \"./components/UserManagment/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securituUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securituUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            //Public Routes\n          }\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/Register\" component={Register} />\n          <Route exact path=\"/Login\" component={Login} />\n\n          {\n            //Private Routes\n          }\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}